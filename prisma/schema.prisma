generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model People {
  id            String    @id @default(uuid())
  name          String
  lastName      String    @map("last_name")
  dob           DateTime
  email         String    @unique
  phone         String
  gender        String?
  maritalStatus String?   @map("marital_status")
  document      String    @unique
  address       String?
  number        Int?
  complement    String?
  neighborhood  String?
  city          String?
  state         String?
  cep           String?
  photo         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  Login         Login?

  @@index([name, lastName, document, email])
  @@map("peoples")
}

model Login {
  id             String    @id @default(uuid())
  password       String
  emailValidated Boolean
  role           Role      @relation(fields: [roleId], references: [id])
  roleId         String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  People         People    @relation(fields: [peopleId], references: [id])
  peopleId       String    @unique @map("people_id")

  @@map("logins")
}

model Role {
  id          String      @id @default(uuid())
  description String
  isActive    Boolean     @map("is_active")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime?   @updatedAt @map("updated_at")
  deletedAt   DateTime?   @map("deleted_at")
  logins      Login[]
  Permission  Permission?

  @@map("roles")
}

model Permission {
  id        String    @id @default(uuid())
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    String    @unique @map("people_id")
  create    Boolean
  read      Boolean
  update    Boolean
  deleted   Boolean
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("permission")
}
